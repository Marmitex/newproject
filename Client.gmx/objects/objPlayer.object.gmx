<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cannon = false;
cid = 0;
cdBall = 0;
cdShoot = 0;
charge = false;
chargePower = 0;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement


y = global.database[# 1, pid];
x = global.database[# 0, pid];
ang = global.database[# 2, pid];

if cannon = false and pid = global.playerID{

    global.database[# 2, pid] = point_direction( x, y, mouse_x, mouse_y);
    
    buffer_seek( global.buffer, buffer_seek_start, 0);
        buffer_write( global.buffer, buffer_u8, 2);
        buffer_write( global.buffer, buffer_s16, global.database[# 2, pid]);
    network_send_packet( global.socket, global.buffer, buffer_get_size( global.buffer) );
        
        
    if keyboard_check(ord("W")){
    
        for( var i = 2; i&gt;=0; i--){
            if place_free( x, y-i){
                global.database[# 1, pid] -= i;
                break;
            }
        
        }
    
    }
    if keyboard_check(ord("S")){
    
        for( var i = 2; i&gt;=0; i--){
            if place_free( x, y+i){
                global.database[# 1, pid] += i;
                break;
            }
        }
        
    }
    
    if keyboard_check(ord("A")){
    
        for( var i = 2; i&gt;=0; i--){
            if place_free( x-i, y){
                global.database[# 0, pid] -= i;
                break;
            }
        }    
    }
    
    if keyboard_check(ord("D")){
    
        for( var i = 2; i&gt;=0; i--){
            if place_free( x+i, y){
                 global.database[# 0, pid] += i;
                 break;
            }
        }
        
    }
    
    if keyboard_check(ord("W"))
    or keyboard_check(ord("S"))
    or keyboard_check(ord("A"))
    or keyboard_check(ord("E")){
    
        buffer_seek( global.buffer, buffer_seek_start, 0);
            buffer_write( global.buffer, buffer_u8, 1);
            buffer_write( global.buffer, buffer_s16, x);
            buffer_write( global.buffer, buffer_s16, y);
        network_send_packet( global.socket, global.buffer, buffer_get_size( global.buffer) );
    
    }


}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cannon
if cannon = true{

    var near = instance_nearest( x, y, objCannon);
    global.database[# 1, pid] = near.y + lengthdir_y( 32, near.image_angle+180);
    global.database[# 0, pid] = near.x + lengthdir_x( 32, near.image_angle+180);
    global.database[# 2, pid] = near.image_angle;
    ang = global.database[# 2, pid];
    image_angle = ang;
}
if pid = global.playerID{

if distance_to_object( objCannon ) &lt; 50
and keyboard_check_pressed( ord("E") )
and cannon = false and charge = false{

    var near = instance_nearest( x, y, objCannon);
    buffer_seek( global.buffer, buffer_seek_start, 0);
        buffer_write( global.buffer, buffer_u8, 3);
        buffer_write( global.buffer, buffer_u8, (near).cid);
    network_send_packet( global.socket, global.buffer, buffer_get_size( global.buffer) );


}

if cannon = true{

if cdBall &gt; 0 { cdBall--; }

with( objCannon ){
    if cid = other.cid{
    global.cannonDatabase[# 1, cid ] = point_direction( x, y, mouse_x, mouse_y);
    }
}

buffer_seek( global.buffer, buffer_seek_start, 0);
    buffer_write( global.buffer, buffer_u8, 4);
    buffer_write( global.buffer, buffer_s16, global.cannonDatabase[# 1, cid ]);
network_send_packet( global.socket, global.buffer, buffer_get_size( global.buffer) );

if keyboard_check_pressed( ord("E") ){

    cannon = false;
    buffer_seek( global.buffer, buffer_seek_start, 0);
        buffer_write( global.buffer, buffer_u8, 5);
        buffer_write( global.buffer, buffer_u8, cid);
    network_send_packet( global.socket, global.buffer, buffer_get_size( global.buffer) );
    
    }

if mouse_check_button_pressed( mb_left ) and cdBall &lt;= 0{
    cdBall = 50;
    buffer_seek( global.buffer, buffer_seek_start, 0);
        buffer_write( global.buffer, buffer_u8, 6);
    network_send_packet( global.socket, global.buffer, buffer_get_size( global.buffer) );
    
    }   
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Weapon shoot

if cannon = false and pid = global.playerID{

    if cdShoot &gt; 0 and charge = false{
    
    cdShoot--;
    
    }
    
    if charge = true{

        if chargePower &lt; 100{
            chargePower += 25/60*3;
        
        }
        if chargePower &gt; 100{ chargePower = 100 };    
    }
    if mouse_check_button( mb_left ) and cdShoot &lt;= 0 and charge = false{
        cdShoot = 40;
         buffer_seek( global.buffer, buffer_seek_start, 0);
            buffer_write( global.buffer, buffer_u8, 7);
            buffer_write( global.buffer, buffer_s16, x);
            buffer_write( global.buffer, buffer_s16, y);
            buffer_write( global.buffer, buffer_s16, ang);
        network_send_packet( global.socket, global.buffer, buffer_get_size( global.buffer) );
        
    }
    
    if mouse_check_button_pressed( mb_right ) and cdShoot &lt;= 0 and charge = false{
        charge = true;
    
    }
    if mouse_check_button_released( mb_right ) and cdShoot &lt;= 0 and charge = true{
        cdShoot = 80;

         buffer_seek( global.buffer, buffer_seek_start, 0);
            buffer_write( global.buffer, buffer_u8, 10);
            buffer_write( global.buffer, buffer_s16, x);
            buffer_write( global.buffer, buffer_s16, y);
            buffer_write( global.buffer, buffer_s16, ang);
            buffer_write( global.buffer, buffer_s16, chargePower);
        network_send_packet( global.socket, global.buffer, buffer_get_size( global.buffer) );

        chargePower = 0;
        charge = false;
    }
        
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xx = global.database[# 0, pid];
var yy = global.database[# 1, pid];
draw_sprite_ext( sprite_index, image_index, xx, yy, image_xscale, 1, ang, c_white, 1);
draw_healthbar( xx-16, yy-25, xx+16, yy-20, global.database[# 5, pid], c_black, c_red, c_green, 0, true, true);

if charge = true{

    draw_healthbar( xx-16, yy+20, xx+16, yy+25, chargePower, c_black, c_red, c_red, 0, true, true);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
